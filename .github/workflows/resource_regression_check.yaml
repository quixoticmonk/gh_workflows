name: Check for AWSCC supported resources suffering from regression

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    paths:
      - 'internal/service/cloudformation/schemas/**'

jobs:
  check-resource-regression:
    name: Check for CloudFormation Resource Support Regression
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.git_role }}
          aws-region: us-east-1

      - name: Generate current CloudFormation resource list
        run: |
          aws cloudformation list-types \
            --type RESOURCE \
            --visibility PUBLIC \
            --provisioning-type FULLY_MUTABLE \
            --filters TypeNamePrefix="AWS::" | \
          jq -r '.TypeSummaries[].TypeName' | sort > supported-resources.txt
          echo "Found $(wc -l < supported-resources.txt) CloudFormation resources"

      - name: Generate provider supported resource list
        run: |
          # Create script to extract resource names from schema files
          cat > extract-resources.sh << 'EOF'
          #!/bin/bash
          
          dir="${1:-.}"
          output_file="current-resources.txt"
          
          # Remove output file if it exists
          rm -f "$output_file"
          
          # Process each JSON file in the directory
          for file in "$dir"/*.json; do
            if [ -f "$file" ]; then
              basename=$(basename "$file")
              modified_name=$(echo "${basename%.json}" | tr '_' '::')
              echo "AWS::$modified_name" >> "$output_file"
            fi
          done
          
          # Sort the output file
          sort -o "$output_file" "$output_file"
          EOF
          
          # Make script executable
          chmod +x extract-resources.sh
          
          # Run the script on the schemas directory
          ./extract-resources.sh internal/service/cloudformation/schemas
          echo "Found $(wc -l < current-resources.txt) provider-supported resources"

      - name: Compare resource lists
        id: compare
        run: |
          # Generate diff
          diff_output=$(diff -u supported-resources.txt current-resources.txt || true)
          
          # Check if there are differences
          if [ -n "$diff_output" ]; then
            echo "Differences found between CloudFormation resources and provider-supported resources"
            echo "DIFF_FOUND=true" >> $GITHUB_ENV
            
            # Extract missing resources (lines starting with - excluding the header)
            grep '^-' <<< "$diff_output" | grep -v '^---' | sed 's/^-//' > missing-resources.txt
            
            # Count missing resources
            missing_count=$(wc -l < missing-resources.txt)
            echo "Found $missing_count potentially missing resources"
            echo "MISSING_COUNT=$missing_count" >> $GITHUB_ENV
            
            # Save diff for later steps
            echo "$diff_output" > diff-output.txt
          else
            echo "No differences found. All CloudFormation resources are supported."
            echo "DIFF_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Create issue for regression
        if: env.DIFF_FOUND == 'true' && github.event_name != 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const diffOutput = fs.readFileSync('diff-output.txt', 'utf8');
            const missingResources = fs.readFileSync('missing-resources.txt', 'utf8');
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Resource Support Regression: ${process.env.MISSING_COUNT} resources potentially missing`,
              body: `## Resource Support Regression Detected

            The automated check has identified ${process.env.MISSING_COUNT} CloudFormation resources that may be missing from the provider.

            ### Missing Resources
            \`\`\`
            ${missingResources}
            \`\`\`

            ### Full Diff
            \`\`\`diff
            ${diffOutput}
            \`\`\`

            This issue was automatically created by the resource regression check workflow.`,
              labels: ['regression', 'github_actions']
            });
            
            console.log(`Issue created: ${issue.data.html_url}`);

      - name: Comment on PR
        if: env.DIFF_FOUND == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const missingResources = fs.readFileSync('missing-resources.txt', 'utf8');
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## Resource Support Regression Warning ⚠️

            This PR may cause a regression in resource support. The automated check has identified ${process.env.MISSING_COUNT} CloudFormation resources that may be missing after this change.

            ### Potentially Missing Resources
            \`\`\`
            ${missingResources}
            \`\`\`

            Please verify if these resources should be supported or if this is an expected change.`
            });

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resource-lists
          path: |
            supported-resources.txt
            current-resources.txt
            diff-output.txt
            missing-resources.txt
          retention-days: 30
